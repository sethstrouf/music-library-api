continue
params
continue
params
continue
results.fourth
results.count
continue
results.count
continue
results
results.values
results.attributes
results.include?('1988')
results.include?(1988)
results
continue
works
continue
works
continue
works
continue
works
continue
results.first
results.count
continue
results.count
continue
seth << 12
seth << 4
seth = [1, 2, 3]
seth = [a, b, c]
test
test = [a, b, c]
test < [test]
test << [test]
test
test = ActiveRecord::Relation
works
continue
JSON.parse(response.body).first['attributes']['title']
JSON.parse(response.body).first['attributes']
JSON.parse(response.body).first.attributes
JSON.parse(response.body).first['title']
JSON.parse(response.body).first.title
JSON.parse(response.body).first
JSON.parse(response.body).count
JSON.parse(response.body)
continue
@works.count
@works
continue
search_works_params[:title]
search_works_params.title
search_works_params
continue
search_works_params
params
continue
params
continue
JSON.parse(response.body)
continue
@library.library_works.first.work
@library.library_works
@library.id
LibraryWork.first
LibraryWork.count
continue
library_work_params
continue
library_work_params
continue
library_work_params
params
continue
params
library_work_params
continue
library_work_params
params
library_work_params
continue
@library.library_works.second.work
@library.library_works.second
@library.library_works
continue
@library.library_works
continue
library_params[:library_id]
library_params
continue
params[:library_id]
params[:id]
params
continue
params
params[:library]
params[:library.id]
params[:library]
params[:id]
params.id
params
continue
params
continue
current_user
continue
@user.libraries.count
@user.libraries
Library.count
continue
@library_params
continue
@library_params
continue
JSON.parse(response.body)['id']
JSON.parse(response.body)
JSON.parse(response.body)[:title]
continue
JSON.parse(response.body)[:title]
JSON.parse(response.body)['title']
JSON.parse(response.body.title)
JSON.parse(response.body).title
JSON.parse(response.body)
JSON.parse(response.body).attributes
continue
JSON.parse(response.body).attributes
JSON.parse(response.body)
continue
JSON.parse(response.body)
JSON.parse(response.body).count
continue
JSON.parse(response.body).count
JSON.parse(response.body).attributes
JSON.parse(response.body)
JSON.parse(response.body['id'])
JSON.parse(response.body)['id']
JSON.parse(response.body)[
JSON.parse(response.body.id)
JSON.parse(response.body.attributes)
JSON.parse(response.body)
JSON.parse(response.body).id
JSON.parse(response.body)
JSON.parse(response.body[:attributes])
JSON.parse(response.body)[:attributes]
JSON.parse(response.body.attributes)
JSON.parse(response.body)
continue
JSON.parse(response.body).count
JSON.parse(response.body).first
JSON.parse(response.body)
JSON.parse(response.body.data)
continue
JSON.parse(response.body.data)
JSON.parse(response.body)
response.body
continue
response.body
response
continue
Work.last
Work.count
continue
Work.first
Work.first.title
Work.title
Work.count
      expect(Work.first.attributes).to include(@work_params)
@work_params
Work.first.attributes
*Work.first.attributes
Work.first.attributes
continue
Work.count
continue
@work_params
@work_params.show_attributes
@work_params.attributes
**@work_params
*@work_params
@work_params
continue
Work.first
Work.count
continue
work_params
params
continue
@user
current_user
params
continue
response
Work.count
continue
Work.count
@user
continue
@user
continue
@user
current_user
continue
current_user
continue
json
current_user
user
continue
@user
continue
User.find(params[:id])
params[:id]
params
@user
continue
response.headers['Authorization']
response
continue
response.headers['Authorization']
continue
response.headers['Authorization']
user
continue
json
continue
json['data']
json
jjson
continue
json['email']
json['id']
json.id
json
current_user
@user
q!
exit
continue
current_user
continue
response.headers['Authorization']
response.headers
response
continue
response.headers
response
continue
response.headers
continue
response.headers
response
continue
